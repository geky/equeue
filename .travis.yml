# Environment variables
env:
  global:
    - CFLAGS=-Werror

# CI jobs
jobs:
  include:
    # Test stage
    - stage: test
      env:
        - STAGE=test
        - NAME=test
      script:
        # Strict compilation of library only (tests use gcc features)
        - make CFLAGS+=-pedantic
        # Run tests
        - make test
        # Find code size with smallest configuration
        - make clean size OBJ=equeue.o | tee sizes

        # Update status with code size, compare with master if possible
        - |
          if [ "$TRAVIS_TEST_RESULT" -eq 0 ]
          then
              CURR=$(tail -n1 sizes | awk '{print $1}')
              PREV=$(curl -u "$GEKY_BOT_STATUSES" https://api.github.com/repos/$TRAVIS_REPO_SLUG/status/master \
                  | jq -re "select(.sha != \"$TRAVIS_COMMIT\")
                      | .statuses[] | select(.context == \"$STAGE/$NAME\").description
                      | capture(\"code size is (?<size>[0-9]+)\").size" \
                  || echo 0)

              STATUS="Passed, code size is ${CURR}B"
              if [ "$PREV" -ne 0 ]
              then
                  STATUS="$STATUS ($(python -c "print '%+.2f' % (100*($CURR-$PREV)/$PREV.0)")%)"
              fi
          fi

    # Runtime profiling stage
    - stage: test
      env:
        - STAGE=test
        - NAME=prof
      script:
        # Relative profiling against master
        - if ( git clone https://github.com/geky/equeue master &&
                make -s -C master prof | tee master/runtime ) ;
          then
            cat master/runtime | make prof | tee runtime ;
          else
            make prof | tee runtime ;
          fi

        # Update status with profile results, compare with master if possible
        - |
          if [ "$TRAVIS_TEST_RESULT" -eq 0 ]
          then
            CURR=$(grep -o '[0-9]\+ cycles' runtime | \
                awk '{sum += $1} END {print sum}')
            PREV=$(curl -u "$GEKY_BOT_STATUSES" https://api.github.com/repos/$TRAVIS_REPO_SLUG/status/master \
                | jq -re "select(.sha != \"$TRAVIS_COMMIT\")
                    | .statuses[] | select(.context == \"$STAGE/$NAME\").description
                    | capture(\"runtime is (?<runtime>[0-9]+)\").runtime" \
                || echo 0)

            STATUS="Passed, runtime is ${CURR} cycles"
            if [ "$PREV" -ne 0 ]
            then
                STATUS="$STATUS ($(python -c "print '%+.2f' % (100*($CURR-$PREV)/$PREV.0)")%)"
            fi
          fi


# Manage statuses
before_install:
  - |
    curl -u "$GEKY_BOT_STATUSES" -X POST \
        https://api.github.com/repos/$TRAVIS_REPO_SLUG/statuses/${TRAVIS_PULL_REQUEST_SHA:-$TRAVIS_COMMIT} \
        -d "{
            \"context\": \"$STAGE/$NAME\",
            \"state\": \"pending\",
            \"description\": \"${STATUS:-In progress}\",
            \"target_url\": \"https://travis-ci.org/$TRAVIS_REPO_SLUG/jobs/$TRAVIS_JOB_ID\"
        }"

after_failure:
  - |
    curl -u "$GEKY_BOT_STATUSES" -X POST \
        https://api.github.com/repos/$TRAVIS_REPO_SLUG/statuses/${TRAVIS_PULL_REQUEST_SHA:-$TRAVIS_COMMIT} \
        -d "{
            \"context\": \"$STAGE/$NAME\",
            \"state\": \"failure\",
            \"description\": \"${STATUS:-Failed}\",
            \"target_url\": \"https://travis-ci.org/$TRAVIS_REPO_SLUG/jobs/$TRAVIS_JOB_ID\"
        }"

after_success:
  - |
    curl -u "$GEKY_BOT_STATUSES" -X POST \
        https://api.github.com/repos/$TRAVIS_REPO_SLUG/statuses/${TRAVIS_PULL_REQUEST_SHA:-$TRAVIS_COMMIT} \
        -d "{
            \"context\": \"$STAGE/$NAME\",
            \"state\": \"success\",
            \"description\": \"${STATUS:-Passed}\",
            \"target_url\": \"https://travis-ci.org/$TRAVIS_REPO_SLUG/jobs/$TRAVIS_JOB_ID\"
        }"

# Job control
stages:
  - name: test
